{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\src\\\\components\\\\chat-application.component.jsx\";\nimport React, { Component } from 'react';\nimport socket from '../socketClient';\nimport DisplayChatBox from './containers/displayChatbox';\nimport axios from 'axios'; //import scroll from 'react'\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import Login from './login.component';\n\nvar ChatApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatApp, _Component);\n\n  function ChatApp(props) {\n    var _this;\n\n    _classCallCheck(this, ChatApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatApp).call(this, props));\n\n    _this.onNewMessage = function (event) {\n      event.preventDefault();\n      var room = _this.state.current_room;\n      var msg = _this.state.input;\n      var user = localStorage.getItem('username');\n\n      _this.setState({\n        input: ''\n      });\n\n      if (!_this.state.input) return;\n\n      _this.props.onSendMessage(_this.state.input, function (err) {\n        if (err) return console.error(err);\n        return _this.setState({\n          input: ''\n        });\n      });\n    };\n\n    _this.state = {\n      chatHistory: [],\n      input: '',\n      current_room: '',\n      user: 'guest',\n      client: socket()\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onNewMessage = _this.onNewMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onMessageReceived = _this.onMessageReceived.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateChatHistory = _this.updateChatHistory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getChatHistory = _this.getChatHistory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onJoinChatroom = _this.onJoinChatroom.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onLeaveChatroom = _this.onLeaveChatroom.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.scrollChatToBottom = this.scrollChatToBottom.bind(this)\n\n    return _this;\n  }\n\n  _createClass(ChatApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //this.scrollChatToBottom()\n      this.getChatHistory();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //this.scrollChatToBottom()\n      this.getChatHistory();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      //this.props.unregisterHandler()\n      this.onLeaveChatroom();\n    }\n  }, {\n    key: \"onJoinChatroom\",\n    value: function onJoinChatroom() {\n      var _this2 = this;\n\n      return this.state.client.join(this.state.current_room, function () {\n        console.log(\"\".concat(_this2.state.user, \" has joined \").concat(_this2.state.current_room, \" Chatroom\"));\n      });\n    }\n  }, {\n    key: \"onLeaveChatroom\",\n    value: function onLeaveChatroom() {\n      var _this3 = this;\n\n      this.state.client.leave(this.state.current_room, function () {\n        console.log(\"\".concat(_this3.state.user, \" has left \").concat(_this3.state.current_room, \" chatroom \"));\n      });\n    }\n  }, {\n    key: \"onTyping\",\n    value: function onTyping() {\n      var _this4 = this;\n\n      var room = this.state.current_room;\n      return this.state.client.typing(room, function () {\n        console.log(\"\".concat(_this4.state.user, \" is typing\"));\n      });\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(e) {\n      this.setState({\n        input: e.target.value\n      });\n    }\n  }, {\n    key: \"onMessageReceived\",\n    value: function onMessageReceived(entry) {\n      console.log('onMessageReceived:', entry);\n      this.updateChatHistory(entry);\n    }\n  }, {\n    key: \"getChatHistory\",\n    value: function getChatHistory() {\n      var _this5 = this;\n\n      var chatName = this.props.match.params.chatName;\n      axios.get(\"http://localhost:4000/api/roomHistory/\".concat(chatName)).then(function (res) {\n        _this5.setState({\n          current_room: res.data.chatroom,\n          chatHistory: res.data.messsage\n        });\n      });\n    }\n  }, {\n    key: \"updateChatHistory\",\n    value: function updateChatHistory(entry) {\n      this.setState({\n        chatHistory: this.state.chatHistory.concat(entry)\n      });\n    }\n    /*\r\n        scrollChatToBottom() {\r\n        this.panel.scrollTo(0, this.panel.scrollHeight)\r\n        }\r\n        */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Chat Now\")), React.createElement(\"div\", {\n        id: \"chatroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(DisplayChatBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChatApp;\n}(Component);\n\nexport default ChatApp;","map":{"version":3,"sources":["C:\\Users\\Harry\\Documents\\GitHub\\COMP3133-full-stack-dev\\Assignment1\\react-frontend\\src\\components\\chat-application.component.jsx"],"names":["React","Component","socket","DisplayChatBox","axios","ChatApp","props","onNewMessage","event","preventDefault","room","state","current_room","msg","input","user","localStorage","getItem","setState","onSendMessage","err","console","error","chatHistory","client","onInput","bind","onMessageReceived","updateChatHistory","getChatHistory","onJoinChatroom","onLeaveChatroom","join","log","leave","typing","e","target","value","entry","chatName","match","params","get","then","res","data","chatroom","messsage","concat","handleMessage"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AAEA;AACA;;IAEMC,O;;;;;AACF,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;;AADe,UA6DnBC,YA7DmB,GA6DJ,UAAAC,KAAK,EAAI;AACpBA,MAAAA,KAAK,CAACC,cAAN;AACA,UAAIC,IAAI,GAAG,MAAKC,KAAL,CAAWC,YAAtB;AACA,UAAIC,GAAG,GAAG,MAAKF,KAAL,CAAWG,KAArB;AACA,UAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;;AACA,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAAd;;AACA,UAAI,CAAC,MAAKH,KAAL,CAAWG,KAAhB,EACI;;AAEJ,YAAKR,KAAL,CAAWa,aAAX,CAAyB,MAAKR,KAAL,CAAWG,KAApC,EAA2C,UAACM,GAAD,EAAS;AACpD,YAAIA,GAAJ,EACI,OAAOC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAP;AAEJ,eAAO,MAAKF,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAP;AACH,OALG;AAMH,KA5EkB;;AAEf,UAAKH,KAAL,GAAa;AACTY,MAAAA,WAAW,EAAE,EADJ;AAETT,MAAAA,KAAK,EAAE,EAFE;AAGTF,MAAAA,YAAY,EAAE,EAHL;AAITG,MAAAA,IAAI,EAAE,OAJG;AAKTS,MAAAA,MAAM,EAAEtB,MAAM;AALL,KAAb;AASJ,UAAKuB,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AACA,UAAKnB,YAAL,GAAoB,MAAKA,YAAL,CAAkBmB,IAAlB,uDAApB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAzB;AACA,UAAKG,cAAL,GAAsB,MAAKA,cAAL,CAAoBH,IAApB,uDAAtB;AACA,UAAKI,cAAL,GAAsB,MAAKA,cAAL,CAAoBJ,IAApB,uDAAtB;AACA,UAAKK,eAAL,GAAuB,MAAKA,eAAL,CAAqBL,IAArB,uDAAvB,CAjBmB,CAkBnB;;AAlBmB;AAmBlB;;;;wCAEmB;AAChB;AACA,WAAKG,cAAL;AACH;;;yCAEoB;AACjB;AACA,WAAKA,cAAL;AACH;;;2CAEsB;AACnB;AACA,WAAKE,eAAL;AACH;;;qCAEe;AAAA;;AACZ,aAAO,KAAKpB,KAAL,CAAWa,MAAX,CAAkBQ,IAAlB,CAAuB,KAAKrB,KAAL,CAAWC,YAAlC,EAAgD,YAAK;AACxDS,QAAAA,OAAO,CAACY,GAAR,WAAe,MAAI,CAACtB,KAAL,CAAWI,IAA1B,yBAA6C,MAAI,CAACJ,KAAL,CAAWC,YAAxD;AACH,OAFM,CAAP;AAGH;;;sCAEgB;AAAA;;AACb,WAAKD,KAAL,CAAWa,MAAX,CAAkBU,KAAlB,CAAwB,KAAKvB,KAAL,CAAWC,YAAnC,EAAiD,YAAK;AAClDS,QAAAA,OAAO,CAACY,GAAR,WAAe,MAAI,CAACtB,KAAL,CAAWI,IAA1B,uBAA2C,MAAI,CAACJ,KAAL,CAAWC,YAAtD;AACH,OAFD;AAGH;;;+BAES;AAAA;;AACN,UAAIF,IAAI,GAAG,KAAKC,KAAL,CAAWC,YAAtB;AACA,aAAO,KAAKD,KAAL,CAAWa,MAAX,CAAkBW,MAAlB,CAAyBzB,IAAzB,EAA+B,YAAK;AACvCW,QAAAA,OAAO,CAACY,GAAR,WAAe,MAAI,CAACtB,KAAL,CAAWI,IAA1B;AACH,OAFM,CAAP;AAGH;;;4BAEOqB,C,EAAG;AACP,WAAKlB,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEsB,CAAC,CAACC,MAAF,CAASC;AADN,OAAd;AAGH;;;sCAmBiBC,K,EAAO;AACzBlB,MAAAA,OAAO,CAACY,GAAR,CAAY,oBAAZ,EAAkCM,KAAlC;AACA,WAAKX,iBAAL,CAAuBW,KAAvB;AACC;;;qCAEe;AAAA;;AAAA,UACLC,QADK,GACO,KAAKlC,KAAL,CAAWmC,KAAX,CAAiBC,MADxB,CACLF,QADK;AAEZpC,MAAAA,KAAK,CAACuC,GAAN,iDAAmDH,QAAnD,GACKI,IADL,CACU,UAAAC,GAAG,EAAI;AACT,QAAA,MAAI,CAAC3B,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAEiC,GAAG,CAACC,IAAJ,CAASC,QADb;AAEVxB,UAAAA,WAAW,EAAEsB,GAAG,CAACC,IAAJ,CAASE;AAFZ,SAAd;AAKH,OAPL;AAQH;;;sCAEiBT,K,EAAO;AACrB,WAAKrB,QAAL,CAAc;AAAEK,QAAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWY,WAAX,CAAuB0B,MAAvB,CAA8BV,KAA9B;AAAf,OAAd;AACH;AACL;;;;;;;;6BAKa;AACL,aACI;AAAK,QAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEI;AAAM,QAAA,QAAQ,EAAI,KAAKW,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,CADJ;AAaH;;;;EAtHiBjD,S;;AAyHtB,eAAeI,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport socket from '../socketClient'\r\nimport DisplayChatBox from './containers/displayChatbox'\r\nimport axios from 'axios'\r\n//import scroll from 'react'\r\n\r\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n// import Login from './login.component';\r\n\r\nclass ChatApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            chatHistory: [],\r\n            input: '',\r\n            current_room: '',\r\n            user: 'guest',\r\n            client: socket()\r\n         }\r\n    \r\n\r\n    this.onInput = this.onInput.bind(this)\r\n    this.onNewMessage = this.onNewMessage.bind(this)\r\n    this.onMessageReceived = this.onMessageReceived.bind(this)\r\n    this.updateChatHistory = this.updateChatHistory.bind(this)\r\n    this.getChatHistory = this.getChatHistory.bind(this)\r\n    this.onJoinChatroom = this.onJoinChatroom.bind(this)\r\n    this.onLeaveChatroom = this.onLeaveChatroom.bind(this)\r\n    //this.scrollChatToBottom = this.scrollChatToBottom.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.scrollChatToBottom()\r\n        this.getChatHistory()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //this.scrollChatToBottom()\r\n        this.getChatHistory()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.unregisterHandler()\r\n        this.onLeaveChatroom()\r\n    }\r\n\r\n    onJoinChatroom(){\r\n        return this.state.client.join(this.state.current_room, () =>{\r\n            console.log(`${this.state.user} has joined ${this.state.current_room} Chatroom`)\r\n        })\r\n    }\r\n\r\n    onLeaveChatroom(){\r\n        this.state.client.leave(this.state.current_room, () =>{\r\n            console.log(`${this.state.user} has left ${this.state.current_room} chatroom `)\r\n        })\r\n    }\r\n\r\n    onTyping(){\r\n        let room = this.state.current_room\r\n        return this.state.client.typing(room, () =>{\r\n            console.log(`${this.state.user} is typing` )\r\n        })\r\n    }\r\n\r\n    onInput(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n    })\r\n    }\r\n\r\n    onNewMessage = event => {\r\n        event.preventDefault()\r\n        let room = this.state.current_room\r\n        let msg = this.state.input\r\n        let user = localStorage.getItem('username')\r\n        this.setState({ input: '' })\r\n        if (!this.state.input)\r\n            return\r\n\r\n        this.props.onSendMessage(this.state.input, (err) => {\r\n        if (err)\r\n            return console.error(err)\r\n\r\n        return this.setState({ input: '' })\r\n    })\r\n    }\r\n\r\n    onMessageReceived(entry) {\r\n    console.log('onMessageReceived:', entry)\r\n    this.updateChatHistory(entry)\r\n    }\r\n\r\n    getChatHistory(){\r\n        const {chatName} = this.props.match.params\r\n        axios.get(`http://localhost:4000/api/roomHistory/${chatName}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    current_room: res.data.chatroom,\r\n                    chatHistory: res.data.messsage\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n    updateChatHistory(entry) {\r\n        this.setState({ chatHistory: this.state.chatHistory.concat(entry) })\r\n    }\r\n/*\r\n    scrollChatToBottom() {\r\n    this.panel.scrollTo(0, this.panel.scrollHeight)\r\n    }\r\n    */\r\n    render() { \r\n        return (\r\n            <div className = \"App\">\r\n                <div>\r\n                    <h1>Chat Now</h1>\r\n                </div>\r\n                <div id=\"chatroom\">\r\n                <DisplayChatBox/>\r\n                    <form onSubmit = {this.handleMessage}>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ChatApp;"]},"metadata":{},"sourceType":"module"}