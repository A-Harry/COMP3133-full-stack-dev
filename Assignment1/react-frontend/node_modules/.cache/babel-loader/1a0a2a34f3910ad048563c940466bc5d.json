{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Documents\\\\GitHub\\\\COMP3133-full-stack-dev\\\\Assignment1\\\\react-frontend\\\\src\\\\components\\\\chat-application.component.jsx\";\nimport React, { Component } from 'react';\nimport socket from '../socketClient'; //import {Container, Modal, ListGroup, Input, FormGroup, Form, Button, ListGroupItem} from 'reactstrap'\n\nimport axios from 'axios'; //import scroll from 'react'\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// import Login from './login.component';\n\nvar ChatApp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatApp, _Component);\n\n  function ChatApp(props) {\n    var _this;\n\n    _classCallCheck(this, ChatApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ChatApp).call(this, props));\n    _this.state = {\n      chatHistory: [],\n      input: '',\n      current_room: '',\n      user: 'guest',\n      client: socket()\n    };\n    _this.onInput = _this.onInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSendMessage = _this.onSendMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onMessageReceived = _this.onMessageReceived.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateChatHistory = _this.updateChatHistory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getChatHistory = _this.getChatHistory.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.scrollChatToBottom = this.scrollChatToBottom.bind(this)\n\n    return _this;\n  }\n\n  _createClass(ChatApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.scrollChatToBottom()\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {//this.scrollChatToBottom()\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {//this.props.unregisterHandler()\n    }\n  }, {\n    key: \"onInput\",\n    value: function onInput(e) {\n      this.setState({\n        input: e.target.value\n      });\n    }\n  }, {\n    key: \"onSendMessage\",\n    value: function onSendMessage() {\n      var _this2 = this;\n\n      if (!this.state.input) return;\n      this.props.onSendMessage(this.state.input, function (err) {\n        if (err) return console.error(err);\n        return _this2.setState({\n          input: ''\n        });\n      });\n    }\n  }, {\n    key: \"onMessageReceived\",\n    value: function onMessageReceived(entry) {\n      console.log('onMessageReceived:', entry);\n      this.updateChatHistory(entry);\n    }\n  }, {\n    key: \"getChatHistory\",\n    value: function getChatHistory() {\n      var _this3 = this;\n\n      var chatName = this.props.match.params.chatName;\n      axios.get(\"http://localhost:4000/api/roomHistory/\".concat(chatName)).then(function (res) {\n        _this3.setState({\n          current_room: res.data.chatroom,\n          chatHistory: res.data.messsage\n        });\n      });\n    }\n  }, {\n    key: \"updateChatHistory\",\n    value: function updateChatHistory(entry) {\n      this.setState({\n        chatHistory: this.state.chatHistory.concat(entry)\n      });\n    }\n    /*\r\n        scrollChatToBottom() {\r\n        this.panel.scrollTo(0, this.panel.scrollHeight)\r\n        }\r\n        */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Chat Now\")), React.createElement(\"div\", {\n        id: \"chatroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(DisplayChatBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.handleMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ChatApp;\n}(Component);\n\nexport default ChatApp;","map":{"version":3,"sources":["C:\\Users\\Harry\\Documents\\GitHub\\COMP3133-full-stack-dev\\Assignment1\\react-frontend\\src\\components\\chat-application.component.jsx"],"names":["React","Component","socket","axios","ChatApp","props","state","chatHistory","input","current_room","user","client","onInput","bind","onSendMessage","onMessageReceived","updateChatHistory","getChatHistory","e","setState","target","value","err","console","error","entry","log","chatName","match","params","get","then","res","data","chatroom","messsage","concat","handleMessage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport socket from '../socketClient'\r\n//import {Container, Modal, ListGroup, Input, FormGroup, Form, Button, ListGroupItem} from 'reactstrap'\r\nimport axios from 'axios'\r\n//import scroll from 'react'\r\n\r\n// import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\n// import Login from './login.component';\r\n\r\nclass ChatApp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            chatHistory: [],\r\n            input: '',\r\n            current_room: '',\r\n            user: 'guest',\r\n            client: socket()\r\n         }\r\n    \r\n\r\n    this.onInput = this.onInput.bind(this)\r\n    this.onSendMessage = this.onSendMessage.bind(this)\r\n    this.onMessageReceived = this.onMessageReceived.bind(this)\r\n    this.updateChatHistory = this.updateChatHistory.bind(this)\r\n    this.getChatHistory = this.getChatHistory.bind(this)\r\n    //this.scrollChatToBottom = this.scrollChatToBottom.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.scrollChatToBottom()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //this.scrollChatToBottom()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //this.props.unregisterHandler()\r\n    }\r\n\r\n    onInput(e) {\r\n        this.setState({\r\n            input: e.target.value\r\n    })\r\n    }\r\n\r\n    onSendMessage() {\r\n        if (!this.state.input)\r\n            return\r\n\r\n        this.props.onSendMessage(this.state.input, (err) => {\r\n        if (err)\r\n            return console.error(err)\r\n\r\n        return this.setState({ input: '' })\r\n    })\r\n    }\r\n\r\n    onMessageReceived(entry) {\r\n    console.log('onMessageReceived:', entry)\r\n    this.updateChatHistory(entry)\r\n    }\r\n\r\n    getChatHistory(){\r\n        const {chatName} = this.props.match.params\r\n        axios.get(`http://localhost:4000/api/roomHistory/${chatName}`)\r\n            .then(res => {\r\n                this.setState({\r\n                    current_room: res.data.chatroom,\r\n                    chatHistory: res.data.messsage\r\n\r\n                })\r\n            })\r\n    }\r\n\r\n    updateChatHistory(entry) {\r\n        this.setState({ chatHistory: this.state.chatHistory.concat(entry) })\r\n    }\r\n/*\r\n    scrollChatToBottom() {\r\n    this.panel.scrollTo(0, this.panel.scrollHeight)\r\n    }\r\n    */\r\n    render() { \r\n        return (\r\n            <div className = \"App\">\r\n                <div>\r\n                    <h1>Chat Now</h1>\r\n                </div>\r\n                <div id=\"chatroom\">\r\n                <DisplayChatBox/>\r\n                    <form onSubmit = {this.handleMessage}>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ChatApp;"]},"metadata":{},"sourceType":"module"}